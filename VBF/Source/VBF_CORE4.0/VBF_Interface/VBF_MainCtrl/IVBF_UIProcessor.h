//***************************************************************************************
// FileName：IVBF_UIProcessor.h
// Function：命令更新接口。
//           当系统菜单和工具条命令需要更新的时候，系统主控调用每个组件的该接口来完成命令更新，
//           在新建工具条的时候，调用该接口来完成工具条上对话框的创建。
//           该接口所处理的ID应该包含IVBF_Command,IVBF_Tool接口中处理的所有ID。
// Author:   武玉国
// Date:     2006-4-22
//***************************************************************************************


#ifndef __IVBF_UI_PROCESSOR_H__
#define __IVBF_UI_PROCESSOR_H__


class IVBF_UIProcessor
{
public:
	virtual ~IVBF_UIProcessor() {}

public:

	//-------------------------------------------------------------------------
	// 获取组件处理的命令更新数。
	// return 命令更新数。
	//-------------------------------------------------------------------------
	virtual int GetUIProcessorCount() = 0;
	
	//-------------------------------------------------------------------------
	// 获取组件处理的命令更新的ID ，与次序无关。
	// nIndex ：用于遍历ID。
	// return 命令更新的ID。
	//-------------------------------------------------------------------------
	virtual const char* GetUIProcessorID(int nIndex) = 0;

	//-------------------------------------------------------------------------
	// 命令更新。
	// 设置工具条或菜单中响应的命令的更新信息，该函数有系统调用 。
	// szCommandID:命令id。
	// pEnable:是否可用。 pCheck:是否选中。 pRadio:是否单选。 szText:文字内容。
	// return 如果已经处理命令返回true，否则返回false。
	//-------------------------------------------------------------------------
	virtual bool UpdateUI(const char* szCommandID, int* piEnable, int* piCheck, int* piRadio, char* szText) = 0;

/*
	//-------------------------------------------------------------------------
	// 返回在工具条上创建对话框数。
	// 每个对话框的实例，全局只有一个，多个组件实例可以共享一个对话框的实例。
	//-------------------------------------------------------------------------
	virtual int GetToolbarDlgCount() = 0;

	//-------------------------------------------------------------------------
	// 获取组件创建的对话框ID，与次序无关。
	// nIndex:用于遍历对话框ID。
	//-------------------------------------------------------------------------
	virtual const char* GetToolbarDlgID(int nIndex) = 0;
	
	//-------------------------------------------------------------------------
	// 创建工具条上对话框。
	// 动态生成工具条时，为了能够在工具条上显示按钮、编辑框等，调用每个组件在工具条上生成对话框，各种按钮、编辑框等可以放在对话框中。该函数完成对话框的生成。
	// szDlgID ：对话框ID。
	// nToolbarPtr ：对话框所在工具条的指针。
	//-------------------------------------------------------------------------
	virtual bool CreateToolbarDlg(const char* szDlgID, int nToolbarPtr) = 0;
*/
};
#endif