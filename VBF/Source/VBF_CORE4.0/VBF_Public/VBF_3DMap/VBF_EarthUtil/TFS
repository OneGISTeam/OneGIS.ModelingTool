#ifndef OSGEARTHUTIL_TFS_H
#define OSGEARTHUTIL_TFS_H 1

#include <VBF_3DMap/VBF_EarthUtil/Common>
#include <VBF_3DMap/VBF_Terrain/GeoData.h>
#include <VBF_3DMap/VBF_Terrain/URI.h>
#include <VBF_Base/VBF_Referenced.h>
#include <VBF_Base/ref_ptr>

#include <VBF_Engine/VBF_SGDB/ReaderWriter>
#include <VBF_Engine/VBF_SceneGraph/Version>
#if OSG_MIN_VERSION_REQUIRED(2,9,5)
#include <VBF_Engine/VBF_SGDB/Options>
#endif


#include <string>
#include <vector>

namespace osgEarth { namespace Util
{
    using namespace osgEarth;

    class OSGEARTHUTIL_EXPORT TFSLayer
    {
    public:
        TFSLayer();

        const std::string& getTitle() const { return _title;}
        void setTitle(const std::string& value) { _title = value;}

        const std::string& getAbstract() const { return _abstract;}
        void setAbstract(const std::string& value) { _abstract = value;}

        const CVBF_GeoExtent& getExtent() const { return _extent;}
        void setExtent(const CVBF_GeoExtent& value) { _extent = value;}

        unsigned int getMaxLevel() const { return _maxLevel;}
        void setMaxLevel( unsigned int value ) { _maxLevel = value;}

        unsigned int getFirstLevel() const { return _firstLevel;}
        void setFirstLevel(unsigned int value) { _firstLevel = value;}

        const CVBF_SpatialReference* getSRS() const { return _srs;}
        void setSRS( const CVBF_SpatialReference* srs ) { _srs = srs;}

    private:
        std::string _title;
        std::string _abstract;
        osgEarth::CVBF_GeoExtent _extent;
        unsigned int _maxLevel;
        unsigned int _firstLevel;
        ref_ptr< const CVBF_SpatialReference > _srs;
    };

    class OSGEARTHUTIL_EXPORT TFSReaderWriter
    {
    public:
        static bool read(const URI& uri, const osgDB::ReaderWriter::Options* options, TFSLayer &layer);
        static bool read( std::istream &in, TFSLayer &layer);

        static void write(const TFSLayer &layer, const std::string& location);
        static void write(const TFSLayer &layer, std::ostream& output);

    };

} } // namespace osgEarth::Util

#endif //OSGEARTHUTIL_TFS_H
